import requests
import pandas as pd

class ImpactConnector:
	"""
	This is an API connector class for Impact Agency API
	https://developer.impact.com/default/documentation/Rest-Adv-v8
	Supported API Calls:
	- List Reports
	- Run Report
	"""
	def __init__(self, accountSID, authToken):
		"""
		The init method authenticates the Impact Connector class and requires Account SID and Auth Token to create a session.
		These details can be found at Impact Agency portal: app.impact.com under
		Settings -> Platform REST Web Services
		:param accountSID: Account SID for API Client
		:param authToken: Auth Token for API Client
		"""
		self.accountSID = accountSID
		self.authToken = authToken
		self.session = requests.Session()
		self.session.auth = (self.accountSID, self.authToken)
		self.auth = self.session.post('https://api.impact.com')

	def __str__(self):
		return f'Impact Connector Class for Agency with id {self.accountSID}'

	def __del__(self):
		if self.session:
			self.session.close()

	def __getData(self, url, dataColumn):
		"""
		A private method to run API call
		:param url: url for API call generated by public method
		:param dataColumn: data column name to look for in the result of API call
		:return: pd.DataFrame() with result data
		"""
		result = pd.DataFrame()
		while url != '':
			response = self.session.get('https://api.impact.com' + url)
			if response.status_code != 200:
				raise Exception(response.text.replace('\n', ': '))
			response = response.content.decode('utf-8')
			data = pd.read_json(response, typ='series')
			url = data['@nextpageuri']
			for record in data[dataColumn]:
				result = result.append(record, ignore_index=True, )
		return result

	def agency_ListReports(self):
		"""
		Retrieves the list of all reports
		:return: pd.DataFrame() with result data
		"""
		url = '/Agencies/' + self.accountSID + '/Reports.json'
		return self.__getData(url, 'Report')

	def agency_RunReport(self, reportId):
		"""
		Runs a report
		:param reportId: str required. Id for the specific Report
		:return: pd.DataFrame() with result data
		"""
		url = f'/Agencies/{self.accountSID}/Reports/{reportId}.json'
		return self.__getData(url, 'Records')

